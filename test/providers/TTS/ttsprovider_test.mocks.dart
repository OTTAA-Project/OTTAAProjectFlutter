// Mocks generated by Mockito 5.4.0 from annotations
// in ottaa_project_flutter/test/Providers/TTS/ttsprovider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ottaa_project_flutter/core/models/voices_model.dart' as _i4;
import 'package:ottaa_project_flutter/core/repositories/tts_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TTSRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTTSRepository extends _i1.Mock implements _i2.TTSRepository {
  MockTTSRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get customTTSEnable => (super.noSuchMethod(
        Invocation.getter(#customTTSEnable),
        returnValue: false,
      ) as bool);
  @override
  set customTTSEnable(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #customTTSEnable,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: '',
      ) as String);
  @override
  set language(String? value) => super.noSuchMethod(
        Invocation.setter(
          #language,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<dynamic> get availableTTS => (super.noSuchMethod(
        Invocation.getter(#availableTTS),
        returnValue: <dynamic>[],
      ) as List<dynamic>);
  @override
  set availableTTS(List<dynamic>? value) => super.noSuchMethod(
        Invocation.setter(
          #availableTTS,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get voice => (super.noSuchMethod(
        Invocation.getter(#voice),
        returnValue: '',
      ) as String);
  @override
  set voice(String? value) => super.noSuchMethod(
        Invocation.setter(
          #voice,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
      ) as String);
  @override
  set name(String? value) => super.noSuchMethod(
        Invocation.setter(
          #name,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: '',
      ) as String);
  @override
  set locale(String? value) => super.noSuchMethod(
        Invocation.setter(
          #locale,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get speechRate => (super.noSuchMethod(
        Invocation.getter(#speechRate),
        returnValue: 0.0,
      ) as double);
  @override
  set speechRate(double? value) => super.noSuchMethod(
        Invocation.setter(
          #speechRate,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get pitch => (super.noSuchMethod(
        Invocation.getter(#pitch),
        returnValue: 0.0,
      ) as double);
  @override
  set pitch(double? value) => super.noSuchMethod(
        Invocation.setter(
          #pitch,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<void> speak(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speak,
          [text],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.Voices>> fetchVoices() => (super.noSuchMethod(
        Invocation.method(
          #fetchVoices,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Voices>>.value(<_i4.Voices>[]),
      ) as _i3.Future<List<_i4.Voices>>);
  @override
  _i3.Future<void> changeVoiceSpeed(double? speed) => (super.noSuchMethod(
        Invocation.method(
          #changeVoiceSpeed,
          [speed],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> changeCustomTTs(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #changeCustomTTs,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> changeTTSVoice(String? voice) => (super.noSuchMethod(
        Invocation.method(
          #changeTTSVoice,
          [voice],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> ttsStop() => (super.noSuchMethod(
        Invocation.method(
          #ttsStop,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
