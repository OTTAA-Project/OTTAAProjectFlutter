// Mocks generated by Mockito 5.3.2 from annotations
// in ottaa_project_flutter/test/providers/ChatGPT/chatgpt_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i10;

import 'package:either_dart/either.dart' as _i3;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ottaa_project_flutter/application/notifiers/patient_notifier.dart'
    as _i4;
import 'package:ottaa_project_flutter/application/providers/user_provider.dart'
    as _i8;
import 'package:ottaa_project_flutter/core/abstracts/user_model.dart' as _i9;
import 'package:ottaa_project_flutter/core/models/patient_user_model.dart'
    as _i2;
import 'package:ottaa_project_flutter/core/repositories/chatgpt_repository.dart'
    as _i11;
import 'package:state_notifier/state_notifier.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePatientUserModel_0 extends _i1.SmartFake
    implements _i2.PatientUserModel {
  _FakePatientUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PatientNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPatientNotifier extends _i1.Mock implements _i4.PatientNotifier {
  @override
  _i2.PatientUserModel get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakePatientUserModel_0(
          this,
          Invocation.getter(#user),
        ),
        returnValueForMissingStub: _FakePatientUserModel_0(
          this,
          Invocation.getter(#user),
        ),
      ) as _i2.PatientUserModel);
  @override
  set onError(_i5.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i6.Stream<_i2.PatientUserModel?> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<_i2.PatientUserModel?>.empty(),
        returnValueForMissingStub: _i6.Stream<_i2.PatientUserModel?>.empty(),
      ) as _i6.Stream<_i2.PatientUserModel?>);
  @override
  set state(_i2.PatientUserModel? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void setUser(_i2.PatientUserModel? user) => super.noSuchMethod(
        Invocation.method(
          #setUser,
          [user],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool updateShouldNotify(
    _i2.PatientUserModel? old,
    _i2.PatientUserModel? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.RemoveListener addListener(
    _i7.Listener<_i2.PatientUserModel?>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i5.RemoveListener);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserNotifier extends _i1.Mock implements _i8.UserNotifier {
  @override
  set user(_i9.UserModel? userModel) => super.noSuchMethod(
        Invocation.setter(
          #user,
          userModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void setUser(_i9.UserModel? userModel) => super.noSuchMethod(
        Invocation.method(
          #setUser,
          [userModel],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clearUser() => super.noSuchMethod(
        Invocation.method(
          #clearUser,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatGPTRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatGPTRepository extends _i1.Mock implements _i11.ChatGPTRepository {
  @override
  _i6.Future<_i3.Either<String, String>> getCompletion({
    required int? age,
    required String? gender,
    required String? pictograms,
    required String? language,
    int? maxTokens = 500,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletion,
          [],
          {
            #age: age,
            #gender: gender,
            #pictograms: pictograms,
            #language: language,
            #maxTokens: maxTokens,
          },
        ),
        returnValue: _i6.Future<_i3.Either<String, String>>.value(
            _FakeEither_1<String, String>(
          this,
          Invocation.method(
            #getCompletion,
            [],
            {
              #age: age,
              #gender: gender,
              #pictograms: pictograms,
              #language: language,
              #maxTokens: maxTokens,
            },
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i3.Either<String, String>>.value(
            _FakeEither_1<String, String>(
          this,
          Invocation.method(
            #getCompletion,
            [],
            {
              #age: age,
              #gender: gender,
              #pictograms: pictograms,
              #language: language,
              #maxTokens: maxTokens,
            },
          ),
        )),
      ) as _i6.Future<_i3.Either<String, String>>);
  @override
  _i6.Future<_i3.Either<String, String>> getGPTStory({
    required String? prompt,
    int? maxTokens = 1000,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGPTStory,
          [],
          {
            #prompt: prompt,
            #maxTokens: maxTokens,
          },
        ),
        returnValue: _i6.Future<_i3.Either<String, String>>.value(
            _FakeEither_1<String, String>(
          this,
          Invocation.method(
            #getGPTStory,
            [],
            {
              #prompt: prompt,
              #maxTokens: maxTokens,
            },
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i3.Either<String, String>>.value(
            _FakeEither_1<String, String>(
          this,
          Invocation.method(
            #getGPTStory,
            [],
            {
              #prompt: prompt,
              #maxTokens: maxTokens,
            },
          ),
        )),
      ) as _i6.Future<_i3.Either<String, String>>);
}
