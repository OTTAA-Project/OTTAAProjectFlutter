// Mocks generated by Mockito 5.4.0 from annotations
// in ottaa_project_flutter/test/service/tts/tts_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i2;

import 'package:flutter/services.dart' as _i7;
import 'package:flutter_tts/flutter_tts.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ottaa_project_flutter/application/common/i18n.dart' as _i3;
import 'package:ottaa_project_flutter/application/language/translation_tree.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocale_0 extends _i1.SmartFake implements _i2.Locale {
  _FakeLocale_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeI18N_1 extends _i1.SmartFake implements _i3.I18N {
  _FakeI18N_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpeechRateValidRange_2 extends _i1.SmartFake
    implements _i4.SpeechRateValidRange {
  _FakeSpeechRateValidRange_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [I18N].
///
/// See the documentation for Mockito's code generation for more information.
class MockI18N extends _i1.Mock implements _i3.I18N {
  @override
  Map<String, _i2.Locale> get platformLanguages => (super.noSuchMethod(
        Invocation.getter(#platformLanguages),
        returnValue: <String, _i2.Locale>{},
        returnValueForMissingStub: <String, _i2.Locale>{},
      ) as Map<String, _i2.Locale>);
  @override
  _i2.Locale get currentLocale => (super.noSuchMethod(
        Invocation.getter(#currentLocale),
        returnValue: _FakeLocale_0(
          this,
          Invocation.getter(#currentLocale),
        ),
        returnValueForMissingStub: _FakeLocale_0(
          this,
          Invocation.getter(#currentLocale),
        ),
      ) as _i2.Locale);
  @override
  set currentLocale(_i2.Locale? _currentLocale) => super.noSuchMethod(
        Invocation.setter(
          #currentLocale,
          _currentLocale,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Future<_i3.I18N> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<_i3.I18N>.value(_FakeI18N_1(
          this,
          Invocation.method(
            #init,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.I18N>.value(_FakeI18N_1(
          this,
          Invocation.method(
            #init,
            [],
          ),
        )),
      ) as _i5.Future<_i3.I18N>);
  @override
  _i5.Future<_i6.TranslationTree?> loadTranslation(_i2.Locale? locale) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadTranslation,
          [locale],
        ),
        returnValue: _i5.Future<_i6.TranslationTree?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.TranslationTree?>.value(),
      ) as _i5.Future<_i6.TranslationTree?>);
  @override
  _i5.Future<void> changeLanguage(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #changeLanguage,
          [languageCode],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> changeLanguageFromLocale(_i2.Locale? locale) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeLanguageFromLocale,
          [locale],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void notify() => super.noSuchMethod(
        Invocation.method(
          #notify,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i2.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i2.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterTts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterTts extends _i1.Mock implements _i4.FlutterTts {
  @override
  set startHandler(_i2.VoidCallback? _startHandler) => super.noSuchMethod(
        Invocation.setter(
          #startHandler,
          _startHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set initHandler(_i2.VoidCallback? _initHandler) => super.noSuchMethod(
        Invocation.setter(
          #initHandler,
          _initHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set completionHandler(_i2.VoidCallback? _completionHandler) =>
      super.noSuchMethod(
        Invocation.setter(
          #completionHandler,
          _completionHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set pauseHandler(_i2.VoidCallback? _pauseHandler) => super.noSuchMethod(
        Invocation.setter(
          #pauseHandler,
          _pauseHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set continueHandler(_i2.VoidCallback? _continueHandler) => super.noSuchMethod(
        Invocation.setter(
          #continueHandler,
          _continueHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set cancelHandler(_i2.VoidCallback? _cancelHandler) => super.noSuchMethod(
        Invocation.setter(
          #cancelHandler,
          _cancelHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set progressHandler(_i4.ProgressHandler? _progressHandler) =>
      super.noSuchMethod(
        Invocation.setter(
          #progressHandler,
          _progressHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set errorHandler(_i4.ErrorHandler? _errorHandler) => super.noSuchMethod(
        Invocation.setter(
          #errorHandler,
          _errorHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<int?> get getMaxSpeechInputLength => (super.noSuchMethod(
        Invocation.getter(#getMaxSpeechInputLength),
        returnValue: _i5.Future<int?>.value(),
        returnValueForMissingStub: _i5.Future<int?>.value(),
      ) as _i5.Future<int?>);
  @override
  _i5.Future<dynamic> get getLanguages => (super.noSuchMethod(
        Invocation.getter(#getLanguages),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> get getEngines => (super.noSuchMethod(
        Invocation.getter(#getEngines),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> get getDefaultEngine => (super.noSuchMethod(
        Invocation.getter(#getDefaultEngine),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> get getDefaultVoice => (super.noSuchMethod(
        Invocation.getter(#getDefaultVoice),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> get getVoices => (super.noSuchMethod(
        Invocation.getter(#getVoices),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<_i4.SpeechRateValidRange> get getSpeechRateValidRange =>
      (super.noSuchMethod(
        Invocation.getter(#getSpeechRateValidRange),
        returnValue: _i5.Future<_i4.SpeechRateValidRange>.value(
            _FakeSpeechRateValidRange_2(
          this,
          Invocation.getter(#getSpeechRateValidRange),
        )),
        returnValueForMissingStub: _i5.Future<_i4.SpeechRateValidRange>.value(
            _FakeSpeechRateValidRange_2(
          this,
          Invocation.getter(#getSpeechRateValidRange),
        )),
      ) as _i5.Future<_i4.SpeechRateValidRange>);
  @override
  _i5.Future<dynamic> awaitSpeakCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitSpeakCompletion,
          [awaitCompletion],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> awaitSynthCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitSynthCompletion,
          [awaitCompletion],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> speak(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speak,
          [text],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> synthesizeToFile(
    String? text,
    String? fileName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #synthesizeToFile,
          [
            text,
            fileName,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setSpeechRate(double? rate) => (super.noSuchMethod(
        Invocation.method(
          #setSpeechRate,
          [rate],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setSharedInstance(bool? sharedSession) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSharedInstance,
          [sharedSession],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> autoStopSharedSession(bool? autoStop) =>
      (super.noSuchMethod(
        Invocation.method(
          #autoStopSharedSession,
          [autoStop],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setIosAudioCategory(
    _i4.IosTextToSpeechAudioCategory? category,
    List<_i4.IosTextToSpeechAudioCategoryOptions>? options, [
    _i4.IosTextToSpeechAudioMode? mode =
        _i4.IosTextToSpeechAudioMode.defaultMode,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIosAudioCategory,
          [
            category,
            options,
            mode,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setEngine(String? engine) => (super.noSuchMethod(
        Invocation.method(
          #setEngine,
          [engine],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setPitch(double? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setPitch,
          [pitch],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setVoice(Map<String, String>? voice) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVoice,
          [voice],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> isLanguageAvailable(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLanguageAvailable,
          [language],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> isLanguageInstalled(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLanguageInstalled,
          [language],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> areLanguagesInstalled(List<String>? languages) =>
      (super.noSuchMethod(
        Invocation.method(
          #areLanguagesInstalled,
          [languages],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setSilence(int? timems) => (super.noSuchMethod(
        Invocation.method(
          #setSilence,
          [timems],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> setQueueMode(int? queueMode) => (super.noSuchMethod(
        Invocation.method(
          #setQueueMode,
          [queueMode],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  void setStartHandler(_i2.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setStartHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setInitHandler(_i2.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setInitHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCompletionHandler(_i2.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setCompletionHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setContinueHandler(_i2.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setContinueHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPauseHandler(_i2.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setPauseHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCancelHandler(_i2.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setCancelHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setProgressHandler(_i4.ProgressHandler? callback) => super.noSuchMethod(
        Invocation.method(
          #setProgressHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setErrorHandler(_i4.ErrorHandler? handler) => super.noSuchMethod(
        Invocation.method(
          #setErrorHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<dynamic> platformCallHandler(_i7.MethodCall? call) =>
      (super.noSuchMethod(
        Invocation.method(
          #platformCallHandler,
          [call],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}
